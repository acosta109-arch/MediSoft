@page "/Disponibilidades/Details/{DisponibilidadId:int}"
@using MediSoft.Models
@using MediSoft.Services
@inject NavigationManager NavigationManager
@inject DisponibilidadService disponibilidadService
@inject IJSRuntime JSRuntime
@inject UsuariosService UsuariosService
@inject AutentificacionService AutentificacionService

<PageTitle>Detalles de la disponibilidad</PageTitle>

@rendermode InteractiveServer

<style>
    :root {
        --primary-bg-color: #f8f9fa;
        --header-bg-color: #3b5998;
        --header-text-color: white;
        --table-header-bg-color: #3b5998;
        --table-header-text-color: white;
        --table-bg-color: white;
        --btn-primary-bg-color: #3b5998;
        --btn-secondary-bg-color: #6c757d;
        --btn-danger-bg-color: #dc3545;
        --btn-text-color: white;
        --card-bg-color: white;
        --card-border-color: #ddd;
        --card-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        --input-border-color: #ccc;
        --label-text-color: #000;
        --text-color: #000;
    }

    [data-theme="dark"] {
        --primary-bg-color: #343a40;
        --header-bg-color: #1e2125;
        --header-text-color: #e9ecef;
        --table-header-bg-color: #1e2125;
        --table-header-text-color: #e9ecef;
        --table-bg-color: #495057;
        --btn-primary-bg-color: #1e2125;
        --btn-secondary-bg-color: #6c757d;
        --btn-danger-bg-color: #dc3545;
        --btn-text-color: #e9ecef;
        --card-bg-color: #495057;
        --card-border-color: #6c757d;
        --card-shadow: 0 4px 8px rgba(0, 0, 0, 0.5);
        --input-border-color: #6c757d;
        --label-text-color: #e9ecef;
        --text-color: #e9ecef;
    }

    body {
        background-color: var(--primary-bg-color);
        color: var(--text-color);
    }

    .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: var(--header-bg-color);
        color: var(--header-text-color);
        padding: 10px 20px;
        border-radius: 8px;
    }

    .filter-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

        .filter-row .form-label {
            font-weight: bold;
            margin-right: 10px;
            color: var(--label-text-color);
        }

    .table-responsive {
        border-radius: 8px;
        box-shadow: var(--card-shadow);
    }

    .table thead {
        background-color: var(--table-header-bg-color);
        color: var(--table-header-text-color);
    }

    .table th, .table td {
        vertical-align: middle;
    }

    .btn-custom {
        border-radius: 50px;
        font-size: 0.9rem;
    }

    .btn-icon {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.5rem;
        border-radius: 50%;
        color: var(--btn-text-color);
        transition: background-color 0.2s ease;
    }

        .btn-icon.btn-primary {
            background-color: var(--btn-primary-bg-color);
        }

        .btn-icon.btn-secondary {
            background-color: var(--btn-secondary-bg-color);
        }

        .btn-icon.btn-danger {
            background-color: var(--btn-danger-bg-color);
        }

        .btn-icon:hover {
            filter: brightness(1.2);
        }

    .form-control {
        border-color: var(--input-border-color);
    }

    .card {
        background-color: var(--card-bg-color);
        border-color: var(--card-border-color);
        box-shadow: var(--card-shadow);
        color: var(--text-color);
    }

    .detail-label {
        font-weight: bold;
    }

    .detail-value {
        color: var(--text-color);
    }
</style>

<div class="container mt-5">
    <div class="card shadow-lg border-0 rounded">
        <div class="header text-center">
            <h3><strong>Detalles de la disponibilidad</strong></h3>
        </div>

        @if (disponibilidad != null)
        {
            <div class="card-body p-4">
                <div class="row mb-3">
                    <div class="col-md-3">
                        <div class="detail-label">ID:</div>
                        <div class="detail-value">@disponibilidad.DisponibilidadId</div>
                    </div>
                    <div class="col-md-3">
                        <div class="detail-label">Doctor:</div>
                        <div class="detail-value">@disponibilidad.Doctor?.NombreCompleto</div>
                    </div>
                    <div class="col-md-3">
                        <div class="detail-label">D&iacute;as de Disponibilidad:</div>
                        <div class="detail-value">@disponibilidad.DiasDisponibilidad</div>
                    </div>
                </div> 
                <div class="row mb-3">
                    <div class="col-md-3">
                        <div class="detail-label">Hora Inicio:</div>
                        <div class="detail-value">@disponibilidad.HoraInicio</div>
                    </div>
                    <div class="col-md-3">
                        <div class="detail-label">Hora Fin:</div>
                        <div class="detail-value">@disponibilidad.HoraFin</div>
                    </div>
                    <div class="col-md-3">
                        <div class="detail-label">Consultorio:</div>
                        <div class="detail-value">@disponibilidad.Consultorio</div>
                    </div>
                </div>

                <hr />

                <div class="card-footer bg-light d-flex justify-content-end mt-3">
                    <a href="/Disponibilidades/Index" class="btn btn-danger btn-custom"><i class="fas fa-arrow-left"></i> Volver</a>
                </div>
            </div>
        }
        else
        {
            <div class="text-center text-muted">Cargando detalles de disponibilidad...</div>
        }
    </div>
</div>


@code {
    public Disponibilidades? disponibilidad = new Disponibilidades();
    public string acceso = "";

    protected override async void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            var buscado = await AutentificacionService.usuarioActual(JSRuntime, UsuariosService);
            if (buscado != null)
            {
                if (buscado.Rol == "Administrador")
                {
                    acceso = "permitido";
                }
                else
                {
                    acceso = "denegado";
                }
                StateHasChanged();
            }
            else
            {
                await AutentificacionService.CerrarSesion(JSRuntime);
            }
        }
    }

    [Parameter]
    public int DisponibilidadId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await BuscarDisponibilidad();
    }

    public async Task BuscarDisponibilidad()
    {
        disponibilidad = await disponibilidadService.Buscar(DisponibilidadId);
    }
}

