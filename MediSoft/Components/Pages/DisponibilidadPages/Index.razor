@page "/Disponibilidades/Index"
@rendermode InteractiveServer
@inject DisponibilidadService disponibilidadService
@inject NavigationManager navigation
@inject IJSRuntime JSRuntime
@inject UsuariosService UsuariosService
@inject AutentificacionService AutentificacionService

<PageTitle>Gesti&oacute;n de disponibilidades</PageTitle>

<style>
    :root {
        --primary-bg-color: #f8f9fa;
        --header-bg-color: #3b5998;
        --header-text-color: white;
        --table-header-bg-color: #3b5998;
        --table-header-text-color: white;
        --table-bg-color: white;
        --btn-primary-bg-color: #3b5998;
        --btn-secondary-bg-color: #6c757d;
        --btn-danger-bg-color: #dc3545;
        --btn-text-color: white;
        --card-bg-color: white;
        --card-border-color: #ddd;
        --card-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        --input-border-color: #ccc;
        --label-text-color: #000;
    }

    [data-theme="dark"] {
        --primary-bg-color: #343a40;
        --header-bg-color: #1e2125;
        --header-text-color: #e9ecef;
        --table-header-bg-color: #1e2125;
        --table-header-text-color: #e9ecef;
        --table-bg-color: #495057;
        --btn-primary-bg-color: #1e2125;
        --btn-secondary-bg-color: #6c757d;
        --btn-danger-bg-color: #dc3545;
        --btn-text-color: #e9ecef;
        --card-bg-color: #495057;
        --card-border-color: #6c757d;
        --card-shadow: 0 4px 8px rgba(0, 0, 0, 0.5);
        --input-border-color: #6c757d;
        --label-text-color: #e9ecef;
    }

    body {
        background-color: var(--primary-bg-color);
        color: #212529;
    }

    .container {
        max-width: 1200px;
        margin: auto;
        padding: 20px;
        background-color: var(--card-bg-color); 
    }

    .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: var(--header-bg-color);
        color: var(--header-text-color);
        padding: 10px 20px;
        border-radius: 8px;
    }

        .header h3 {
            margin: 0;
        }

    .filter-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

        .filter-row .form-label {
            font-weight: bold;
            margin-right: 10px;
            color: var(--label-text-color); 
        }

    .table-responsive {
        border-radius: 8px;
        box-shadow: var(--card-shadow);
    }

    .table thead {
        background-color: var(--table-header-bg-color);
        color: var(--table-header-text-color);
    }

    .table th, .table td {
        vertical-align: middle;
    }

    .btn-custom {
        border-radius: 50px;
        font-size: 0.9rem;
    }

    .btn-icon {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.5rem;
        border-radius: 50%;
        color: var(--btn-text-color);
        transition: background-color 0.2s ease;
    }

        .btn-icon.btn-primary {
            background-color: var(--btn-primary-bg-color);
        }

        .btn-icon.btn-secondary {
            background-color: var(--btn-secondary-bg-color);
        }

        .btn-icon.btn-danger {
            background-color: var(--btn-danger-bg-color);
        }

        .btn-icon:hover {
            filter: brightness(1.2);
        }

    .form-control {
        border-color: var(--input-border-color);
    }

    .card {
        background-color: var(--card-bg-color);
        border-color: var(--card-border-color);
        box-shadow: var(--card-shadow);
    }
</style>

<div class="container mt-5">
    <div class="header">
        <h3><strong>Disponibilidades</strong></h3>
        <a href="/Disponibilidades/Create" class="btn btn-success bi bi-plus-circle-fill btn-custom"> Crear</a>
    </div>

    <div class="filter-row">
        <div class="d-flex align-items-center">
            <label for="Filtro" class="form-label">Filtrar por:</label>
            <InputSelect id="filtro" class="form-select" @bind-Value="filtro">
                <option value="" disabled>Seleccionar</option>
                <option value="id">DisponibilidadId</option>
                <option value="doctor">Doctor</option>
                <option value="especialidad">Especialidad</option>
                <option value="dias">Días</option>
            </InputSelect>
        </div>
        <div class="input-group">
            <input @bind="valorFiltro" class="form-control" placeholder="Buscar" />
            <button @onclick="Buscar" class="btn btn-primary" type="button">
                <span class="bi bi-search-heart-fill"></span> Buscar
            </button>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-striped table-bordered mt-3">
            <thead class="table-striped table-secondary text-black">
                <tr>
                    <th>ID</th>
                    <th>Doctor</th>
                    <th>Días</th>
                    <th>Hora Inicio</th>
                    <th>Hora Fin</th>
                    <th>Consultorio</th>
                    <th>Detalles</th>
                    <th>Modificar</th>
                    <th>Eliminar</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var disponibilidad in disponibilidadesFiltradas)
                {
                    <tr>
                        <td>DISP-@disponibilidad.DisponibilidadId</td>
                        <td>@disponibilidad.Doctor.NombreCompleto</td>
                        <td>@disponibilidad.DiasDisponibilidad</td>
                        <td>@ConvertTo12HourFormat(disponibilidad.HoraInicio)</td>
                        <td>@ConvertTo12HourFormat(disponibilidad.HoraFin)</td>
                        <td>@disponibilidad.Consultorio</td>
                        <td class="text-center">
                            <a href="/Disponibilidades/Details/@disponibilidad.DisponibilidadId" class="btn-icon btn-primary bi bi-binoculars-fill"> </a>
                        </td>
                        <td class="text-center">
                            <a href="/Disponibilidades/Edit/@disponibilidad.DisponibilidadId" class="btn-icon btn-secondary bi bi-pencil-fill"> </a>
                        </td>
                        <td class="text-center">
                            <a href="/Disponibilidades/Delete/@disponibilidad.DisponibilidadId" class="btn-icon btn-danger bi bi-trash-fill"> </a>
                        </td>
                    </tr>
                }
            </tbody> 
        </table>
    </div>
</div>

@code {
    public List<Disponibilidades> disponibilidades = new List<Disponibilidades>();
    public List<Disponibilidades> disponibilidadesFiltradas = new List<Disponibilidades>();
    public string filtro { get; set; } = "id";
    public string valorFiltro { get; set; } = string.Empty;
    

    protected override async Task OnInitializedAsync()
    {
        disponibilidades = await disponibilidadService.ListarDisponibilidades();
        disponibilidadesFiltradas = disponibilidades;
    }

    private void Buscar()
    {
        if (string.IsNullOrEmpty(valorFiltro))
        {
            disponibilidadesFiltradas = disponibilidades;
        }
        else
        {
            switch (filtro)
            {
                case "id":
                    if (int.TryParse(valorFiltro, out int id))
                    {
                        disponibilidadesFiltradas = disponibilidades.Where(d => d.DisponibilidadId == id).ToList();
                    }
                    break;
                case "doctor":
                    disponibilidadesFiltradas = disponibilidades.Where(d => d.Doctor != null &&
                        $"{d.Doctor.NombreCompleto}".Contains(valorFiltro, StringComparison.OrdinalIgnoreCase)).ToList();
                    break;
                case "especialidad":
                    disponibilidadesFiltradas = disponibilidades.Where(d => d.Doctor != null &&
                        $"{d.Doctor.Especialidad}".Contains(valorFiltro, StringComparison.OrdinalIgnoreCase)).ToList();
                    break;
                case "dias":
                    disponibilidadesFiltradas = disponibilidades.Where(d => d.DiasDisponibilidad.Contains(valorFiltro, StringComparison.OrdinalIgnoreCase)).ToList();
                    break;
            }
        }
    }

    private string ConvertTo12HourFormat(string time24)
    {
        if (DateTime.TryParseExact(time24, "HH:mm", null, System.Globalization.DateTimeStyles.None, out DateTime time))
        {
            return time.ToString("hh:mm tt");
        }
        return time24;
    }
}
