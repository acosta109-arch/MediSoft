@page "/DisponibilidadesCards"
@inject DisponibilidadService disponibilidadService
@inject NavigationManager navigation

<PageTitle>Disponibilidades</PageTitle>

<style>
    .card {
        transition: transform 0.2s ease-out, box-shadow 0.2s ease-out;
    }

        .card:hover {
            transform: translateY(-10px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
        }

    .form-control, .form-select {
        border: 2px solid #ced4da; /* Darker border color */
        border-radius: 50px; /* Oval shape */
        box-shadow: none; /* Remove default shadow */
        background-color: #f8f9fa; /* Slightly darker white background */
    }

        .form-control:focus, .form-select:focus {
            border-color: #495057; /* Darker border color on focus */
            box-shadow: 0 0 0 0.2rem rgba(0, 0, 0, 0.1); /* Optional: subtle shadow on focus */
        }

    .input-group .form-control {
        border-radius: 50px 0 0 50px; /* Oval shape with rounded left edge */
    }

    .input-group .btn {
        border-radius: 0 50px 50px 0; /* Oval shape with rounded right edge */
        background-color: #007bff; /* Primary button color */
        color: white;
        border: none;
    }

        .input-group .btn:hover {
            background-color: #0056b3; /* Darker shade on hover */
        }
</style>

<div class="container mt-5">
    <div class="row mb-3 align-items-end">
        <div class="col-md-3">
            <label for="Filtro" class="form-label"><strong>Filtrar por:</strong></label>
            <InputSelect id="filtro" class="form-select" @bind-Value="filtro">
                <option value="" disabled>Seleccionar</option>
                <option value="nombreDoctor">Nombre del Doctor</option>
                <option value="especialidad">Especialidad</option>
                <!-- Add more filter options here if needed -->
            </InputSelect>
        </div>
        <div class="col-md-6">
            <label for="ValorFiltro" class="form-label"><strong>Búsqueda:</strong></label>
            <div class="input-group">
                <input @bind="valorFiltro" class="form-control" placeholder="Buscar" />
                <button @onclick="Buscar" class="btn btn-primary" type="button">
                    <span class="bi bi-search-heart-fill"></span> Buscar
                </button>
            </div>
        </div>
    </div>

    @if (disponibilidadesFiltradas.Any())
    {
        <div class="row">
            @foreach (var disponibilidad in disponibilidadesFiltradas)
            {
                <div class="col-md-4 mb-3">
                    <div class="card bg-primary text-white">
                        <div class="card-body">
                            <h5 class="card-title">Dr: @disponibilidad.Doctor?.Nombre @disponibilidad.Doctor?.Apellido</h5>
                            <p class="card-text">Especialidad: @disponibilidad.Especialidad</p>
                            <p class="card-text">Disponibilidad: @disponibilidad.DiasDisponibilidad</p>
                            <a href="/Disponibilidades/Details/@disponibilidad.DisponibilidadId" class="btn btn-info text-white">Ver Información</a>
                            <a href="/Citas/Create/@disponibilidad.DisponibilidadId" class="btn btn-light">Realizar Cita</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="text-center">
            <img src="https://images.emojiterra.com/google/android-pie/512px/1f914.png" alt="No Results" style="width: 80px; height: 80px;" />
            <h3 class="mt-3">No existe lo que está buscando</h3>
            <p>Vuelva e inténtelo.</p>
        </div>
    }
</div>

@code {
    public List<Disponibilidades> disponibilidades = new List<Disponibilidades>();
    public List<Disponibilidades> disponibilidadesFiltradas = new List<Disponibilidades>();
    public string filtro { get; set; } = "nombreDoctor";
    public string valorFiltro { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        disponibilidades = await disponibilidadService.ListarDisponibilidades();
        disponibilidadesFiltradas = disponibilidades;
    }

    private void Buscar()
    {
        if (string.IsNullOrEmpty(valorFiltro))
        {
            disponibilidadesFiltradas = disponibilidades;
        }
        else
        {
            switch (filtro)
            {
                case "nombreDoctor":
                    disponibilidadesFiltradas = disponibilidades
                        .Where(d => (d.Doctor?.Nombre.Contains(valorFiltro, StringComparison.OrdinalIgnoreCase) ?? false) ||
                                    (d.Doctor?.Apellido.Contains(valorFiltro, StringComparison.OrdinalIgnoreCase) ?? false))
                        .ToList();
                    break;
                case "especialidad":
                    disponibilidadesFiltradas = disponibilidades
                        .Where(d => d.Especialidad.Contains(valorFiltro, StringComparison.OrdinalIgnoreCase))
                        .ToList();
                    break;
                    // Add additional filtering cases here if needed
            }
        }
    }
}
