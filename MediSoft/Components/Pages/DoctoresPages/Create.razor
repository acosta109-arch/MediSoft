@page "/Doctores/Create"
@using MediSoft.Models
@using MediSoft.Services

@inject NavigationManager NavigationManager
@inject DoctoresService doctoresService
@inject NotificationService notificationService
@rendermode InteractiveServer

<RadzenNotification />
<EditForm Model="doctor" OnValidSubmit="Guardar" FormName="DoctorForm">
    <DataAnnotationsValidator />

    <div class="card">
        <div class="card-header text-center bg-primary">
            <h3 class="text-white"><strong>Crear Nuevo Doctor</strong></h3>
        </div>

        <div class="card-body">
            <div class="row">

                <div class="col-md-6 mb-3">
                    <label class="fw-bold">Nombre:</label>
                    <InputText @bind-Value="doctor.Nombre" class="form-control" placeholder="Nombre del doctor" />
                    <ValidationMessage For="@(() => doctor.Nombre)" />
                </div>

                <div class="col-md-6 mb-3">
                    <label class="fw-bold">Apellido:</label>
                    <InputText @bind-Value="doctor.Apellido" class="form-control" placeholder="Apellido del doctor" />
                    <ValidationMessage For="@(() => doctor.Apellido)" />
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label class="fw-bold">Teléfono:</label>
                    <InputText @bind-Value="doctor.Telefono" class="form-control" placeholder="Teléfono del doctor" />
                    <ValidationMessage For="@(() => doctor.Telefono)" />
                </div>

                <div class="col-md-6 mb-3">
                    <label class="fw-bold">Email:</label>
                    <InputText @bind-Value="doctor.Email" class="form-control" placeholder="Correo electrónico del doctor" />
                    <ValidationMessage For="@(() => doctor.Email)" />
                </div>
            </div>

            <hr />

            <div class="card-header text-center bg-primary">
                <h3 class="text-white"><strong>Crear Nuevo Detalle del Doctor</strong></h3>
            </div>

            <div class="row">
                <div class="col">
                    <div>
                        <label class="fw-bold">Especialidad:</label>
                        <InputText class="form-control mb-2" @bind-Value="detalleDoctor.Especialidad" placeholder="Ingrese la especialidad" />
                        <ValidationMessage For="@(() => detalleDoctor.Especialidad)" />
                    </div>
                </div>

                <div class="text-end mb-2">
                    <button type="button" class="btn btn-outline-success" @onclick="AgregarDetalle"><i class="bi bi-floppy-fill"></i> Agregar</button>
                </div>
            </div>

            <div class="col-5">
                <div class="mb-4"></div>
                <table class="table table-bordered text-center">
                    <thead class="bg-secondary text-white">
                        <tr>
                            <th class="col-10">Especialidad</th>
                            <th class="col-2">Eliminar</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (listaDetallesDoctor.Any())
                        {
                            @foreach (var item in listaDetallesDoctor)
                            {
                                <tr>
                                    <td class="col-10">@item.Especialidad</td>
                                    <td class="col-2">
                                        <button type="button" class="btn btn-outline-danger" @onclick="(() => EliminarDetalle(item))"><i class="bi bi-trash3-fill" />Eliminar</button>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="2">No hay especialidades...</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="card-footer bg-light d-flex justify-content-end">
            <div class="btn-group">
                <a href="/Doctores/Index" class="btn btn-outline-danger"><span class="fas fa-arrow-left"></span> Volver</a>
            </div>
            <button type="submit" class="btn btn-outline-success"><i class="bi bi-floppy-fill"></i> Guardar</button>
        </div>
    </div>
</EditForm>

@code {
    private Doctores doctor = new Doctores();
    private DetalleDoctores detalleDoctor = new DetalleDoctores();
    private List<DetalleDoctores> listaDetallesDoctor = new List<DetalleDoctores>();

    public async Task Guardar()
    {
        if (listaDetallesDoctor.Count > 0)
        {
            doctor.DetalleDoctores = listaDetallesDoctor.ToList();
            var creado = await doctoresService.Guardar(doctor);

            if (creado)
            {
                var mensaje = new NotificationMessage
                {
                    Severity = NotificationSeverity.Success,
                    Summary = "Éxito",
                    Detail = "Se ha guardado correctamente",
                    Duration = 4_000
                };
                notificationService.Notify(mensaje);
            }
            else
            {
                var mensaje = new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "Error",
                    Detail = "No se ha guardado correctamente",
                    Duration = 4_000
                };
                notificationService.Notify(mensaje);
            }
        }
    }

    private void AgregarDetalle()
    {
        if (detalleDoctor != null)
        {
            listaDetallesDoctor.Add(detalleDoctor);
            detalleDoctor = new DetalleDoctores();
        }
    }

    private void EliminarDetalle(DetalleDoctores detalle)
    {
        listaDetallesDoctor.Remove(detalle);
    }
}

